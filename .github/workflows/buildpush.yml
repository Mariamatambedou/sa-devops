name: Build, Test, Push Docker Image and SonarQube Scan

on:
  push:
    branches:
      - main  # Déclenche le workflow à chaque push sur la branche 'main'
  pull_request:
    branches:
      - main  # Déclenche le workflow pour chaque pull request vers la branche 'main'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: tambedou/buildpush-image:latest

      - name: Logout from Docker Hub
        run: docker logout

      # Envoyer l'e-mail directement via Gmail
      - name: Send Email Notification
        if: always()
        run: |
          sudo apt-get install -y msmtp
          echo -e "Subject: Résultat du Workflow GitHub Actions\n\nLe workflow a été exécuté avec le statut : ${{ job.status }}" | \
          msmtp --host=smtp.gmail.com \
                --port=587 \
                --tls=on \
                --auth=on \
                --user=${{ secrets.GMAIL_USERNAME }} \
                --passwordeval="echo ${{ secrets.GMAIL_APP_PASSWORD }}" \
                --from=${{ secrets.GMAIL_USERNAME }} \
                ${{ secrets.GMAIL_USERNAME }}  # Envoyez à votre propre adresse Gmail
